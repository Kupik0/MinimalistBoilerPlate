// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebApi;

#nullable disable

namespace WebApi.Migrations
{
    [DbContext(typeof(KaderKutusuDbContext))]
    partial class KaderKutusuDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DogalTasKutu", b =>
                {
                    b.Property<int>("BulunduguKutularId")
                        .HasColumnType("integer");

                    b.Property<int>("IcerikId")
                        .HasColumnType("integer");

                    b.HasKey("BulunduguKutularId", "IcerikId");

                    b.HasIndex("IcerikId");

                    b.ToTable("DogalTasKutu");
                });

            modelBuilder.Entity("WebApi.Models.DogalTas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Isim")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Maliyet")
                        .HasColumnType("numeric");

                    b.Property<decimal>("OrtalamaAgirlik")
                        .HasColumnType("numeric");

                    b.Property<string>("Ozellikler")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Stok")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("DogalTas");
                });

            modelBuilder.Entity("WebApi.Models.KaderKutusu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("KaderTasId")
                        .HasColumnType("integer");

                    b.Property<int>("SepetId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("KaderTasId");

                    b.HasIndex("SepetId");

                    b.ToTable("KaderKutusu");
                });

            modelBuilder.Entity("WebApi.Models.Kutu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("Fiyat")
                        .HasColumnType("numeric");

                    b.Property<int?>("SepetId")
                        .HasColumnType("integer");

                    b.Property<string>("Tur")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UrunKodu")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("SepetId");

                    b.ToTable("Kutu");
                });

            modelBuilder.Entity("WebApi.Models.Sepet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("OnaylandiMi")
                        .HasColumnType("boolean");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Sepet");
                });

            modelBuilder.Entity("WebApi.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AdSoyad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("EPosta")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Sifre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Yas")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("User", "KaderKutusu");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AdSoyad = " Selda Bağcan",
                            Adres = "Konak mah. 312. Cd. 123. sk İzmir Türkiye",
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EPosta = "vurucusesselda@yahoo.com",
                            Sifre = "123456",
                            Yas = "64"
                        });
                });

            modelBuilder.Entity("DogalTasKutu", b =>
                {
                    b.HasOne("WebApi.Models.Kutu", null)
                        .WithMany()
                        .HasForeignKey("BulunduguKutularId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApi.Models.DogalTas", null)
                        .WithMany()
                        .HasForeignKey("IcerikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApi.Models.KaderKutusu", b =>
                {
                    b.HasOne("WebApi.Models.DogalTas", "KaderTas")
                        .WithMany()
                        .HasForeignKey("KaderTasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApi.Models.Sepet", "Sepet")
                        .WithMany()
                        .HasForeignKey("SepetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KaderTas");

                    b.Navigation("Sepet");
                });

            modelBuilder.Entity("WebApi.Models.Kutu", b =>
                {
                    b.HasOne("WebApi.Models.Sepet", null)
                        .WithMany("EklenenKutular")
                        .HasForeignKey("SepetId");
                });

            modelBuilder.Entity("WebApi.Models.Sepet", b =>
                {
                    b.HasOne("WebApi.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebApi.Models.Sepet", b =>
                {
                    b.Navigation("EklenenKutular");
                });
#pragma warning restore 612, 618
        }
    }
}
